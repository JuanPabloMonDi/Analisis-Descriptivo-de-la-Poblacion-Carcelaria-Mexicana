#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra<-cbind(DatosCualiIntra,Y[c("GrupoFinal")])
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
levels(DatosCualiIntra$GrupoFinal)
#| label: valuest grupo1
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["1"]])
#| label: valuest grupo2
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["2"]])
#| label: plano2-3
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(2,3),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: plano1-2
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: plano1-3
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,3),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_SERVICIO_MEDICO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: valuest grupo3
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["3"]])
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_AGUA_POTABLE)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilescelda
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: valuest grupo1
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["1"]])
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_DRENAJE)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_SANITARIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_SANITARIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
table(DatosCualiIntra$)
table(DatosCualiIntra$GrupoFinal)
table(DatosCualiIntra$GrupoFinal)/nrow(DatosCualiIntra)
table(DatosCualiIntra$GrupoFinal)/nrow(DatosCualiIntra)*100
#| label: numero-grupos
#| code-fold: show
grupos_jerarquicos <- cutree(hclCafe, k=7)
#| label: consolidacion
#| code-fold: true
set.seed(1311) #Fijamos semilla
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean) #Calculamos los centros de gravedad obtenidos para los 5000 grupos
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1]) #Iniciamos kmeans con los centros de gravedad calculados
ordenados <- order(rowSums(kmeans_consolidacion$centers))
# Crear una nueva asignación de grupos reordenada
consolidacion <- match(kmeans_consolidacion$cluster, ordenados)
Grupos<-consolidacion[pregroup$cluster] #Obtenemos los grupos finales
#Grupos<-kmeans_consolidacion$cluster[pregroup$cluster] #Obtenemos los grupos finales
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
table(DatosCualiIntra$GrupoFinal)/nrow(DatosCualiIntra)*100
#| label: numero-grupos
#| code-fold: show
grupos_jerarquicos <- cutree(hclCafe, k=4)
#| label: consolidacion
#| code-fold: true
set.seed(1311) #Fijamos semilla
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean) #Calculamos los centros de gravedad obtenidos para los 5000 grupos
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1]) #Iniciamos kmeans con los centros de gravedad calculados
ordenados <- order(rowSums(kmeans_consolidacion$centers))
# Crear una nueva asignación de grupos reordenada
consolidacion <- match(kmeans_consolidacion$cluster, ordenados)
Grupos<-consolidacion[pregroup$cluster] #Obtenemos los grupos finales
#Grupos<-kmeans_consolidacion$cluster[pregroup$cluster] #Obtenemos los grupos finales
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: valuest grupo1
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["1"]])
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_DRENAJE)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_SANITARIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: carga-librerias
#| message: false
#| code-fold: show
#| output: false
#Manejo de datos
library(tidyverse)
library(readr)
library(dplyr)
library(readxl)
#Gráficos
library(ggplot2)
library(gridExtra)
library(plotly)
library(GGally)
#ACP
library(ade4)
library(FactoClass)
library(FactoMineR)
library(factoextra)
#Datos importados
source("DatosSeleccionados.R")
#Ajustes de tema del documento y graficos
library(scales)
library(DT)
library(gt)
library(RColorBrewer)
theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
library(hrbrthemes)
options(scipen=999) #Evitar notación científica
#| label: Selección1
#| echo: false
#| message: false
#| warning: false
#| output: true
#Variables seleccionadas en el ACM
Var_cuali_intra<-c(
"CAR_PERSONAS_CELDA",
"CELDA_VENTANAS",
"CELDA_AGUA_POTABLE" ,
"CELDA_DRENAJE",
"CELDA_LUZ",
"CELDA_DUCHA" ,
"CELDA_SANITARIO" ,
"CELDA_SERVICIO_MEDICO",
"CELDA_ALIMENTOS",
"CARCEL_EJERCICIO",
"CARCEL_LECTURA" ,
"CARCEL_RELIGION" ,
"CARCEL_LLAMADAS" ,
"CARCEL_ESTUDIO" ,
"CARCEL_VISITA" ,
"CELDA_SEGURIDAD" ,
"CARCEL_SEGURIDAD",
"TIPO_CARCEL",
"TIEMPO_CARCEL",
"ORIENT_SEXUAL",
"SEXO"
)
DatosCualiIntra<-Tabla1[,Var_cuali_intra]
DatosCualiIntra[]<-lapply(DatosCualiIntra, as.factor)
kable(head(DatosCualiIntra, 10))
#| code-fold: show
#| label: acmIntracarcelario
acmIntra <- MCA(DatosCualiIntra, graph=FALSE,level.ventil = 0.01,ncp=7)
#| label: screeplotIntra
#| echo: false
screeplot <- fviz_screeplot(acmIntra, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle("Scree Plot") + theme_minimal()+ylab("Porcentaje de varianza explicada")+xlab("Ejes")
## Usando modif.rate() del paquete GDAtools:
# ptau <- modif.rate(acm)$modif[, 1]
## Haciendo las cuentas uno mismo:
s <- ncol(DatosCualiIntra)
l <- acmIntra$eig[acmIntra$eig[,1] > 1/s, 1]
tau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2
ptau <- tau / sum( tau ) * 100
# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: Tabla-benzecriintra
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:5,])
#| label: seleccionejes
#| code-fold: show
Y<-acmIntra$ind$coord[,1:3]
#| label: Preagrupamieto
#| code-fold: show
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311) #Fijamos la semilla
pregroup<- kmeans(Y, centers = 5000)  #Agrupamos los datos en 5000 grupos
#| label: jerarquico
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
#| echo: false
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
#| label: numero-grupos
#| code-fold: show
grupos_jerarquicos <- cutree(hclCafe, k=4)
#| label: consolidacion
#| code-fold: true
set.seed(1311) #Fijamos semilla
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean) #Calculamos los centros de gravedad obtenidos para los 5000 grupos
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1]) #Iniciamos kmeans con los centros de gravedad calculados
ordenados <- order(rowSums(kmeans_consolidacion$centers))
# Crear una nueva asignación de grupos reordenada
consolidacion <- match(kmeans_consolidacion$cluster, ordenados)
Grupos<-consolidacion[pregroup$cluster] #Obtenemos los grupos finales
#Grupos<-kmeans_consolidacion$cluster[pregroup$cluster] #Obtenemos los grupos finales
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
#valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra["GrupoFinal"])
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra[["GrupoFinal"]])
View(DatosCualiIntra)
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra[["GrupoFinal"]])
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], as.vector(DatosCualiIntra[["GrupoFinal"]]))
DatosCualiIntra[1:21]
DatosCualiIntra[,1:21]
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y[c("GrupoFinal")]
valores_test<-cluster.carac(DatosCualiIntra[1:21], DatosCualiIntra$GrupoFinal)
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra["GrupoFinal"]<-Y["GrupoFinal"]
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra<-cbind(DatosCualiIntra,Y["GrupoFinal"])
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: Selección1
#| echo: false
#| message: false
#| warning: false
#| output: true
#Variables seleccionadas en el ACM
Var_cuali_intra<-c(
"CAR_PERSONAS_CELDA",
"CELDA_VENTANAS",
"CELDA_AGUA_POTABLE" ,
"CELDA_DRENAJE",
"CELDA_LUZ",
"CELDA_DUCHA" ,
"CELDA_SANITARIO" ,
"CELDA_SERVICIO_MEDICO",
"CELDA_ALIMENTOS",
"CARCEL_EJERCICIO",
"CARCEL_LECTURA" ,
"CARCEL_RELIGION" ,
"CARCEL_LLAMADAS" ,
"CARCEL_ESTUDIO" ,
"CARCEL_VISITA" ,
"CELDA_SEGURIDAD" ,
"CARCEL_SEGURIDAD",
"TIPO_CARCEL",
"TIEMPO_CARCEL",
"ORIENT_SEXUAL",
"SEXO"
)
DatosCualiIntra<-Tabla1[,Var_cuali_intra]
DatosCualiIntra[]<-lapply(DatosCualiIntra, as.factor)
kable(head(DatosCualiIntra, 10))
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra<-cbind(DatosCualiIntra,Y["GrupoFinal"])
valores_test<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: valuest grupo1
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["1"]])
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesEjercicio
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CARCEL_EJERCICIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: plano1-2
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_AGUA_POTABLE)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: plano2-3
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(2,3),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
table(DatosCualiIntra$GrupoFinal)
table(DatosCualiIntra$GrupoFinal)/nrow(DatosCualiIntra)
table(DatosCualiIntra$GrupoFinal)/nrow(DatosCualiIntra)*100
#| label: graficoperfilesVentanas
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_VENTANAS)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesTipoCarcel
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$TIPO_CARCEL)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: valuest grupo2
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["2"]])
#| label: valuest grupo3
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["3"]])
#| label: valuest grupo4
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["4"]])
DatosCualiIntra[DatosCualiIntra$GrupoFinal=="2",]
nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="2" & DatosCualiIntra$SEXO=="F",])
nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="2" & DatosCualiIntra$SEXO=="F",])/nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="2",])
nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="2" & DatosCualiIntra$ORIENT_SEXUAL=="2",])/nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="2",])
nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="4" & DatosCualiIntra$CELDA_AGUA_POTABLE=="No",])/nrow(DatosCualiIntra[DatosCualiIntra$GrupoFinal=="4",])*100
#| label: valuest grupo1
#| message: false
#| echo: false
#| warning: false
#| output: true
kable(valores_test[["1"]])
#| label: graficoperfilessexo
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_AGUA_POTABLE)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesagua
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_SANITARIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilescelda
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesEjercicio
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CARCEL_EJERCICIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesEjercicio
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CARCEL_EJERCICIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesEjercicio
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CARCEL_ESTUDIO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesEjercicio
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CARCEL_LECTURA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesVentanas
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_VENTANAS)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesVentanas
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$CELDA_VENTANAS)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesTipoCarcel
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$TIPO_CARCEL)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: graficoperfilesTiempoCarcel
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$TIEMPO_CARCEL)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: plano1-2
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: PorcentajesGrupos
#| echo: false
kable(table(DatosCualiIntra$GrupoFinal)/nrow(DatosCualiIntra)*100)
