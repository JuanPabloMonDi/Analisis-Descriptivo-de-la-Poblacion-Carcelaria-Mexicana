#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_ind(acm_ventil, axes=c(1,2), geom="point", asp=1, col.ind = "cos2",ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_ind(acm_ventil, axes=c(2,3), geom="point", col.ind = "cos2",ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_ind(acm_ventil, axes=c(1,4), geom="point", col.ind = "cos2",ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acm_ventil, axes=c(1,2), repel = TRUE,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acm_ventil, axes=c(2,3), repel = TRUE, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acm_ventil, axes=c(1,3), repel = TRUE,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acm_ventil, axes=c(2,5), repel = TRUE, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),ggtheme=theme_minimal())
#| label: contribucion-correlacion-ventil
#| echo: false
#| warning: false
#| output: true
# Crear el gráfico ggplot
gg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym("Dim 1"), y = !!sym("Dim 2"), label = rownames(acm$var$eta2), text = rownames(acm_ventil$var$eta2))) +
geom_point(size=0.75, shape=75, colour="blue3") +  # Añadir los puntos
geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas
theme_minimal() +  # Aplicar un tema minimalista
labs(title = "MCA Ventil- Correlación de variables",
x = "Dim 1", y = "Dim 2") +  # Añadir títulos y etiquetas
scale_x_continuous(expand = c(0, 0), limits = c(-0.1, 1), breaks = seq(-0.1, 1, by = 0.1)) +  # Ajustar los límites del eje x
scale_y_continuous(expand = c(0, 0), limits = c(-0.1, 1), breaks = seq(-0.1, 1, by = 0.1)) +  # Ajustar los límites del eje y
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Añadir línea horizontal en y = 0
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50")    # Añadir línea vertical en x = 0
# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse
ggplotly(gg, tooltip = "text")
#| label: contribucion-correlacion2-ventil
#| echo: false
#| warning: false
#| output: true
# Crear el gráfico ggplot
gg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym("Dim 2"), y = !!sym("Dim 3"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +
geom_point(size=0.75,shape=75,colour="blue3") +  # Añadir los puntos
geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas
theme_minimal() +  # Aplicar un tema minimalista
labs(title = "MCA Ventil - Correlación de variables",
x = "Dim 2", y = "Dim 3")+  # Añadir títulos y etiquetas
scale_x_continuous(expand = c(0, 0), limits = c(-0.1, 1), breaks = seq(-0.1, 1, by = 0.1)) +  # Ajustar los límites del eje x
scale_y_continuous(expand = c(0, 0), limits = c(-0.1, 1), breaks = seq(-0.1, 1, by = 0.1)) +  # Ajustar los límites del eje y
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Añadir línea horizontal en y = 0
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50")    # Añadir línea vertical en x = 0
# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse
ggplotly(gg, tooltip = "text")
#| label: contribucion-correlacion3_ventil
#| echo: false
#| warning: false
#| output: true
gg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym("Dim 4"), y = !!sym("Dim 5"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +
geom_point(size=0.75,shape=75,colour="blue3") +  # Añadir los puntos
geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas
theme_minimal() +  # Aplicar un tema minimalista
labs(title = "MCA Ventil - Correlación de variables",
x = "Dim 4", y = "Dim 5")+  # Añadir títulos y
# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse
scale_x_continuous(expand = c(0, 0), limits = c(-0.1, 1), breaks = seq(-0.1, 1, by = 0.1)) +  # Ajustar los límites del eje x
scale_y_continuous(expand = c(0, 0), limits = c(-0.1, 1), breaks = seq(-0.1, 1, by = 0.1)) +  # Ajustar los límites del eje y
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +  # Añadir línea horizontal en y = 0
geom_vline(xintercept = 0, linetype = "dashed", color = "gray50")    # Añadir línea vertical en x = 0
ggplotly(gg, tooltip = "text")
#| label: ACM Sociodemográficas
#| message: false
#| echo: false
#| output: false
Var_cuali_sociodemo<-c(
"SEXO",
"EDAD",
#"NACION",
"EST_CIVIL",
"VIVE_CON",
"HIJOS",
"NIVEL_ESCOLARIDAD",
"PARO_ESTUDIOS",
#"IDENTI_GENERO",
"ORIENT_SEXUAL",
"CATEGORIAS_EDAD_CONSUMO_TABACO",
"CATEGORIAS_EDAD_CONSUMO_ALCOHOL",
"CATEGORIAS_EDAD_CONSUMO_MARIHUANA" ,
"CATEGORIAS_EDAD_CONSUMO_INHALABLES",
"CATEGORIAS_EDAD_CONSUMO_LSD",
"CATEGORIAS_EDAD_CONSUMO_HONGOS",
"CATEGORIAS_EDAD_CONSUMO_COCAINA",
"CATEGORIAS_EDAD_CONSUMO_CRACK",
"CATEGORIAS_EDAD_CONSUMO_HEROINA",
"CATEGORIAS_EDAD_CONSUMO_CHOCHOS",
"CATEGORIAS_EDAD_CONSUMO_TRANQUILIZANTES",
"CATEGORIAS_EDAD_CONSUMO_ANFETAMINAS",
"COLOR_PIEL",
"VIVIO_MADRE_ADOLESCENCIA",
"VIVIO_PADRE_ADOLESCENCIA",
"CONSIDERO_SUICIDIO" ,
"DISC_VISUAL",
"DISC_AUDITIVA",
"DISC_MOTRIZ"
)
DatosCualiSoc<-Tabla1[,Var_cuali_sociodemo]
acmSoc <- MCA(DatosCualiSoc, graph=FALSE,level.ventil = 0.01,ncp=7,quali.sup = c(13:21),quanti.sup = 2)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmSoc,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),quali.col = "black")
#fviz_mca_var(acmSoc,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), axes=c(4,5), repel = TRUE,label="none",  ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmSoc,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
axes=c(1,3), repel = TRUE,  ggtheme=theme_minimal(),quali.col = "black")
#fviz_mca_var(acmSoc,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), axes=c(4,5), repel = TRUE,label="none",  ggtheme=theme_minimal())
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmSoc,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
axes=c(4,3), repel = TRUE,  ggtheme=theme_minimal(),quali.col = "black")
#fviz_mca_var(acmSoc,col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), axes=c(4,5), repel = TRUE,label="none",  ggtheme=theme_minimal())
#| echo: false
screeplot <- fviz_screeplot(acmSoc, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle("Scree Plot") + theme_minimal()+ylab("Porcentaje de varianza explicada")+xlab("Ejes")
## Usando modif.rate() del paquete GDAtools:
# ptau <- modif.rate(acm)$modif[, 1]
## Haciendo las cuentas uno mismo:
s <- ncol(DatosCualiSoc)
l <- acmSoc$eig[acmSoc$eig[,1] > 1/s, 1]
tau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2
ptau <- tau / sum( tau ) * 100
# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: Tabla-benzecrisoc
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:5,])
#| label: contribacm1Socio
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSoc, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm2 Socio
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSoc, choice = "var", axes = 2) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm3 Socio
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSoc, choice = "var", axes = 3) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm4 Socio
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSoc, choice = "var", axes = 4) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: ACM Economicas
#| message: false
#| echo: false
#| output: false
Var_cuali_eco<-c("VIVE_CON",
"TRABAJO",
"PODIA_COMER",
"DEUDA",
"SALARIO_MES_ANTERIOR")
DatosCualieco<-Tabla1[,Var_cuali_eco]
acmEco <- MCA(DatosCualieco, graph=FALSE,level.ventil = 0.01)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmEco, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#| echo: false
screeplot <- fviz_screeplot(acmEco, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle("Scree Plot") + theme_minimal()+ylab("Porcentaje de varianza explicada")+xlab("Ejes")
## Usando modif.rate() del paquete GDAtools:
# ptau <- modif.rate(acm)$modif[, 1]
## Haciendo las cuentas uno mismo:
s <- ncol(DatosCualieco)
l <- acmEco$eig[acmEco$eig[,1] > 1/s, 1]
tau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2
ptau <- tau / sum( tau ) * 100
# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: contribacm1Eco
#| echo: false
#| output: true
contrib <- fviz_contrib(acmEco, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm2 Eco
#| echo: false
#| output: true
contrib <- fviz_contrib(acmEco, choice = "var", axes = 2) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: ACM Delictivas
#| message: false
#| echo: false
#| output: false
Var_cuali_deli<-c(
"SENTENCIADO_ANTES",
"MOTIVO_DETENCION" ,
"TIEMPO_DEL_DET",
"INTENTO_SOBORNO",
"DECLARACION_CULPABLE",
"INTENTO_SOBORNO_JUICIO",
"CATEGORIAS_TIEMPO_RECLUIDO",
"CATEGORIAS_TIEMPO_PROCESO",
"DELITOS_ABIERTOS"
)
DatosCualiDeli<-Tabla1[,Var_cuali_deli]
acmDeli <- MCA(DatosCualiDeli, graph=FALSE,level.ventil = 0.01,quanti.sup = 9)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmDeli, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#| echo: false
screeplot <- fviz_screeplot(acmDeli, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle("Scree Plot") + theme_minimal()+ylab("Porcentaje de varianza explicada")+xlab("Ejes")
## Usando modif.rate() del paquete GDAtools:
# ptau <- modif.rate(acm)$modif[, 1]
## Haciendo las cuentas uno mismo:
s <- ncol(DatosCualiDeli)
l <- acmDeli$eig[acmDeli$eig[,1] > 1/s, 1]
tau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2
ptau <- tau / sum( tau ) * 100
# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: Tabla-benzecrideli
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:3,])
#| label: contribacm1SDeli
#| echo: false
#| output: true
contrib <- fviz_contrib(acmDeli, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm2 deli
#| echo: false
#| output: true
contrib <- fviz_contrib(acmDeli, choice = "var", axes = 2) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: ACM Intra carcelaria
#| message: false
#| echo: false
#| output: false
Var_cuali_intra<-c(
"CAR_PERSONAS_CELDA",
"CELDA_VENTANAS",
"CELDA_AGUA_POTABLE" ,
"CELDA_DRENAJE",
"CELDA_LUZ",
"CELDA_DUCHA" ,
"CELDA_SANITARIO" ,
"CELDA_SERVICIO_MEDICO",
"CELDA_ALIMENTOS",
"CARCEL_EJERCICIO",
"CARCEL_LECTURA" ,
"CARCEL_RELIGION" ,
"CARCEL_LLAMADAS" ,
"CARCEL_ESTUDIO" ,
"CARCEL_VISITA" ,
"CELDA_SEGURIDAD" ,
"CARCEL_SEGURIDAD",
"TIPO_CARCEL",
"TIEMPO_CARCEL",
"ORIENT_SEXUAL",
"SEXO"
)
DatosCualiIntra<-Tabla1[,Var_cuali_intra]
acmIntra <- MCA(DatosCualiIntra, graph=FALSE,level.ventil = 0.01)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmIntra, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
fviz_mca_var_interactive(acmIntra, axes=c(2,3), repel = TRUE,  ggtheme=theme_minimal(),col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#| echo: false
screeplot <- fviz_screeplot(acmIntra, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle("Scree Plot") + theme_minimal()+ylab("Porcentaje de varianza explicada")+xlab("Ejes")
## Usando modif.rate() del paquete GDAtools:
# ptau <- modif.rate(acm)$modif[, 1]
## Haciendo las cuentas uno mismo:
s <- ncol(DatosCualiIntra)
l <- acmIntra$eig[acmIntra$eig[,1] > 1/s, 1]
tau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2
ptau <- tau / sum( tau ) * 100
# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: Tabla-benzecriintra
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:5,])
#| label: contribacm1 Intra
#| echo: false
#| output: true
contrib <- fviz_contrib(acmIntra, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm2 Intra
#| echo: false
#| output: true
contrib <- fviz_contrib(acmIntra, choice = "var", axes = 2) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: ACM Expectativas
#| message: false
#| echo: false
#| output: false
Var_cuali_sali<-c(
"SALIDA_VIVIENDA",
"SALIDA_EMPLEO",
"SALIDA_ESTUDIO",
"SALIDA_AMIGOS",
"SALIDA_FAMILIA",
"SALIDA_REINCORPORACION",
"CONSIDERO_SUICIDIO"
)
DatosCualisali<-Tabla1[,Var_cuali_sali]
acmSali <- MCA(DatosCualisali, graph=FALSE,level.ventil = 0.02)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5.5
#| fig-height: 5
#| echo: false
#fviz_mca_var_interactive(acmSali, axes=c(2,4), repel = TRUE,  ggtheme=theme_minimal())
fviz_mca_var_interactive(acmSali, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
#| label: ACM Expectativas
#| message: false
#| echo: false
#| output: false
Var_cuali_sali<-c(
"SALIDA_VIVIENDA",
"SALIDA_EMPLEO",
"SALIDA_ESTUDIO",
"SALIDA_AMIGOS",
"SALIDA_FAMILIA",
"SALIDA_REINCORPORACION",
"CONSIDERO_SUICIDIO"
)
DatosCualisali<-Tabla1[,Var_cuali_sali]
acmSali <- MCA(DatosCualisali, graph=FALSE,level.ventil = 0.02)
#| echo: false
screeplot <- fviz_screeplot(acmSali, addlabels = TRUE, ylim = c(0, 30)) +  ggtitle("Scree Plot") + theme_minimal()+ylab("Porcentaje de varianza explicada")+xlab("Ejes")
## Usando modif.rate() del paquete GDAtools:
# ptau <- modif.rate(acm)$modif[, 1]
## Haciendo las cuentas uno mismo:
s <- ncol(DatosCualisali)
l <- acmSali$eig[acmSali$eig[,1] > 1/s, 1]
tau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2
ptau <- tau / sum( tau ) * 100
# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: Tabla-benzecriSali
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:5,])
#| label: Tabla-benzecriSali
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:3,])
#| label: contribacm1Sali
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSali, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: Tabla-benzecriSali
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:3,])
#| label: contribacm1Sali
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSali, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm2 Sali
#| echo: false
#| output: true
contrib <- fviz_contrib(acmSali, choice = "var", axes = 2) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
