# Creamos un data frame para usar con ggplot2
barplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)
# Creamos el gráfico de barras con ggplot2
barplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +
geom_bar(stat = "identity", fill = "darkred") +
ylim(0, max(barplot_df$Valor+10)) +
labs(x = "Ejes", y = expression(tau(lambda))) +
theme_minimal() +
ggtitle("Criterio de Benzécri")
grid.arrange(screeplot, barplot_gg, ncol = 1)
#| label: Tabla-benzecriintra
#| echo: false
#| warning: false
#| output: true
kable(barplot_df[1:5,])
#| label: contribacm1 Intra
#| echo: false
#| output: true
contrib <- fviz_contrib(acmIntra, choice = "var", axes = 1) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm2 Intra
#| echo: false
#| output: true
contrib <- fviz_contrib(acmIntra, choice = "var", axes = 2) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
#| label: contribacm3 Intra
#| echo: false
#| output: true
contrib <- fviz_contrib(acmIntra, choice = "var", axes = 3) +
theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))
contrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))
# Convierte el gráfico de ggplot a plotly
contrib_plotly <- ggplotly(contrib)
contrib_plotly
Y<-cbind(acmIntra$ind$coord[,1:3],Tabla1$CELDA_HORAS)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311)
pregroup<- kmeans(Y, centers = 5000)
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
hclust_result <- hclust(dist(pregroup$centers), method = "ward.D2")
grupos_jerarquicos <- cutree(hclust_result, k=5000)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
consolidacion <- kmeans(pregroup$centers, centers = 4)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
Y<-acmIntra$ind$coord[,1:3]
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311)
pregroup<- kmeans(Y, centers = 5000)
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
Y<-acmIntra$ind$coord[,1:4]
Y<-acmIntra$ind$coord[,1:4]
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311)
pregroup<- kmeans(Y, centers = 5000)
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
hclust_result <- hclust(dist(pregroup$centers), method = "ward.D2")
grupos_jerarquicos <- cutree(hclust_result, k=5000)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
consolidacion <- kmeans(pregroup$centers, centers = 4)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
consolidacion <- kmeans(pregroup$centers, centers = 7)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
consolidacion <- kmeans(pregroup$centers, centers = 6)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
consolidacion <- kmeans(pregroup$centers, centers = 5)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
consolidacion <- kmeans(pregroup$centers, centers = 7)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
set.seed(1311)
consolidacion <- kmeans(pregroup$centers, centers = 4)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CAR_PERSONAS_CELDA)
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
DatosCualiIntra<-cbind(DatosCualiIntra,Y$GrupoFinal)
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CELDA_AGUA_POTABLE)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| code-fold: show
#| label: Selección1
#Variables seleccionadas en el ACM
Var_cuali_intra<-c(
"CAR_PERSONAS_CELDA",
"CELDA_VENTANAS",
"CELDA_AGUA_POTABLE" ,
"CELDA_DRENAJE",
"CELDA_LUZ",
"CELDA_DUCHA" ,
"CELDA_SANITARIO" ,
"CELDA_SERVICIO_MEDICO",
"CELDA_ALIMENTOS",
"CARCEL_EJERCICIO",
"CARCEL_LECTURA" ,
"CARCEL_RELIGION" ,
"CARCEL_LLAMADAS" ,
"CARCEL_ESTUDIO" ,
"CARCEL_VISITA" ,
"CELDA_SEGURIDAD" ,
"CARCEL_SEGURIDAD",
"TIPO_CARCEL",
"TIEMPO_CARCEL",
"ORIENT_SEXUAL",
"SEXO"
)
DatosCualiIntra<-Tabla1[,Var_cuali_intra]
DatosCualiIntra[]<-lapply(DatosCualiIntra, as.factor)
head(DatosCualiIntra, 10)
acmIntra <- MCA(DatosCualiIntra, graph=FALSE,level.ventil = 0.01,ncp=7)
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311)
pregroup<- kmeans(Y, centers = 5000)
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
set.seed(1311)
consolidacion <- kmeans(pregroup$centers, centers = 4)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
set.seed(1311)
consolidacion <- kmeans(pregroup$centers, centers = 4)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
Y<-acmIntra$ind$coord[,1:3]
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311)
pregroup<- kmeans(Y, centers = 5000)
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
#consolidacion <- kmeans(pregroup$centers[unique(grupos_jerarquicos), ], centers = 4)
set.seed(1311)
consolidacion <- kmeans(pregroup$centers, centers = 4)
# Asignar los grupos finales a las observaciones en Tabla1
a<- consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
DatosCualiIntra<-cbind(DatosCualiIntra,Y$GrupoFinal)
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CELDA_AGUA_POTABLE)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
View(DatosCualiIntra)
cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$`Y$GrupoFinal`)
b<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$`Y$GrupoFinal`)
View(b)
View(b[["1"]])
View(b[["2"]])
View(b[["3"]])
View(b[["4"]])
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CELDA_SEGURIDAD)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CELDA_DUCHA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CELDA_DRENAJE)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$CARCEL_LECTURA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$TIEMPO_CARCEL)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$`Y$GrupoFinal`,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
set.seed(1311)
hclust_result <- hclust(dist(pregroup$centers), method = "ward.D2")
grupos_jerarquicos <- cutree(hclust_result, k=4)
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean)
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1])
set.seed(1311)
hclust_result <- hclust(dist(pregroup$centers), method = "ward.D2")
grupos_jerarquicos <- cutree(hclust_result, k=4)
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean)
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1])
b<-kmeans_consolidacion$cluster[pregroup$cluster]
Y<-as.data.frame(Y)
Y$GrupoFinal<-a
Y$GrupoFinal<-as.factor(Y$GrupoFinal)
Y[["GrupoFinal2"]]<-as.factor(b)
View(Y)
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal2,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
DatosCualiIntra<-cbind(DatosCualiIntra,Y[c("GrupoFinal","GrupoFinal2")])
View(DatosCualiIntra)
tc<-table(DatosCualiIntra$GrupoFinal2,DatosCualiIntra$TIEMPO_CARCEL)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$GrupoFinal2,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$GrupoFinal2,DatosCualiIntra$CELDA_DUCHA)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$GrupoFinal2,DatosCualiIntra$CELDA_DRENAJE)
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$GrupoFinal2,DatosCualiIntra$CAR_PERSONAS_CELDA)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
tc<-table(DatosCualiIntra$GrupoFinal2,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
plotct(tc, "row", col=1+(1:ncol(tc)))
list(grupos_jerarquicos)
centros_de_gravedad
cutree(hclCafe,k=4)
cutree(hclCafe,k=4)==grupos_jerarquicos
#| label: plano2-3
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(2,3),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: plano2-3
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(2,3),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: consolidacion
#| code-fold: true
set.seed(1311) #Fijamos semilla
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean) #Calculamos los centros de gravedad obtenidos para los 5000 grupos
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1]) #Iniciamos kmeans con los centros de gravedad calculados
ordenados <- order(rowSums(kmeans_consolidacion$centers))
# Crear una nueva asignación de grupos reordenada
Grupos <- match(kmeans_consolidacion$cluster, ordenados)
#Grupos<-kmeans_consolidacion$cluster[pregroup$cluster] #Obtenemos los grupos finales
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
ordenados
#| label: consolidacion
#| code-fold: true
set.seed(1311) #Fijamos semilla
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean) #Calculamos los centros de gravedad obtenidos para los 5000 grupos
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1]) #Iniciamos kmeans con los centros de gravedad calculados
ordenados <- order(rowSums(kmeans_consolidacion$centers))
# Crear una nueva asignación de grupos reordenada
consolidacion <- match(kmeans_consolidacion$cluster, ordenados)
Grupos<-consolidacion$cluster[pregroup$cluster] #Obtenemos los grupos finales
consolidacion
#| label: consolidacion
#| code-fold: true
set.seed(1311) #Fijamos semilla
centros_de_gravedad <- aggregate(pregroup$centers, by = list(grupos_jerarquicos), FUN = mean) #Calculamos los centros de gravedad obtenidos para los 5000 grupos
kmeans_consolidacion <- kmeans(pregroup$centers, centers = centros_de_gravedad[, -1]) #Iniciamos kmeans con los centros de gravedad calculados
ordenados <- order(rowSums(kmeans_consolidacion$centers))
# Crear una nueva asignación de grupos reordenada
consolidacion <- match(kmeans_consolidacion$cluster, ordenados)
Grupos<-consolidacion[pregroup$cluster] #Obtenemos los grupos finales
#Grupos<-kmeans_consolidacion$cluster[pregroup$cluster] #Obtenemos los grupos finales
#| label: AsignacionGrupos
#| echo: false
Y<-as.data.frame(Y)
Y[["GrupoFinal"]]<-as.factor(Grupos)
DatosCualiIntra<-cbind(DatosCualiIntra,Y[c("GrupoFinal")])
#| label: graficoperfiles
#| echo: false
tc<-table(DatosCualiIntra$GrupoFinal,DatosCualiIntra$SEXO)
plotct(tc, "row", col=1+(1:ncol(tc)))
#| label: tvalues
#| echo: false
b<-cluster.carac(DatosCualiIntra[,1:21], DatosCualiIntra$GrupoFinal)
#| label: plano1-2
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(1,2),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
fviz_eig(acmIntra)
barplot(acmIntra$eig)
#par(mar = c(2.5, 1, 1, 1.5) + 0.1)
vline <- function(x = 0, color = "green") {
list(
type = "line",
y0 = 0,
y1 = 1,
yref = "paper",
x0 = x,
x1 = x,
line = list(color = color, dash="dot")
)
}
plot_ly(y=1:length(acmIntra$eig),x=acmIntra$eig,type="bar",orientation="h")%>%layout(plot_bgcolor = "#e5ecf6", shapes = list(vline(1), list(type = "rect",
fillcolor = "red", opacity = 0.2,
x0 = 0.8, x1 = max(acmIntra$eig)+0.2, y0 = -0.5, y1 = 24)))
plot_ly(y=1:4,x=acmIntra$eig,type="bar",orientation="h")%>%layout(plot_bgcolor = "#e5ecf6", shapes = list(vline(1), list(type = "rect",
fillcolor = "red", opacity = 0.2,
x0 = 0.8, x1 = max(acmIntra$eig)+0.2, y0 = -0.5, y1 = 24)))
#| label: plano2-3
#| echo: false
#| output: true
fviz_mca_ind(acmIntra,label = "none",
axes=c(2,3),
habillage = Y$GrupoFinal,
#col.ind= Y$GrupoFinal,
palette = "jco",  addEllipses = TRUE,
ellipse.type = "convex",
repel = TRUE)
#| label: Preagrupamieto
#| code-fold: show
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311) #Fijamos la semilla
pregroup<- kmeans(Y, centers = 5000)  #Agrupamos los datos en 5000 grupos
#Para garantizar que, cada vez que se reproduzca se obtenga la misma enumeración para el grupo
preorden <- order(rowSums(pregroup$centers))
# Crear una nueva asignación de grupos reordenada
preagrup<- match(pregroup$cluster,preorden)
#| label: jerarquico
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
#| echo: false
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
#| label: seleccionejes
#| code-fold: true
Y<-acmIntra$ind$coord[,1:3]
#| label: Preagrupamieto
#| code-fold: show
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
set.seed(1311) #Fijamos la semilla
pregroup<- kmeans(Y, centers = 5000)  #Agrupamos los datos en 5000 grupos
#Para garantizar que, cada vez que se reproduzca se obtenga la misma enumeración para el grupo
preorden <- order(rowSums(pregroup$centers))
# Crear una nueva asignación de grupos reordenada
preagrup<- match(pregroup$cluster,preorden)
#| label: jerarquico
#| fig-cap: ''
#| fig-align: 'center'
#| fig-width: 5
#| fig-height: 5.5
#| echo: false
hclCafe <- ward.cluster(dista=dist(pregroup$centers), h.clust=1) # función de FactoClass
plot(hclCafe, las=1, col="darkblue", main="", sub="", xlab="")
abline(h=seq(0, 7, 0.5), col="gray90", lty=3)
#| label: numero-grupos
#| code-fold: true
grupos_jerarquicos <- cutree(hclCafe, k=4)
