{"title":"Análisis de Correspondencias Simples","markdown":{"yaml":{"title":"Análisis de Correspondencias Simples","format":"html","editor":"visual"},"headingText":"ACM de nuestro objetivo","containsRefs":false,"markdown":"\n\n```{r}\n#| label: carga-librerias\n#| message: false\n#| echo: false\n#| output: false\n\n#Manejo de datos\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(readxl)\n#Gráficos\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(plotly)\nlibrary(GGally)\n#ACP\nlibrary(ade4)\nlibrary(FactoClass)\nlibrary(FactoMineR)\nlibrary(factoextra)\n#Datos importados\nsource(\"DatosSeleccionados.R\")\n\n#Ajustes de tema del documento y graficos\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(RColorBrewer)\ntheme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\nlibrary(hrbrthemes)\noptions(scipen=999)\n```\n\nConvertimos alguas variables en categóricas mediante discretización\n```{r}\n#| label: Seleccion-variables\n#| echo: false\n#| warning: false\n#| output: false\n#http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/112-pca-principal-component-analysis-essentials/#r-packages\n#Escogemos las variables cuantitativas\nvarCualitativas<-c(\"TIPO_CARCEL\",\"EST_CIVIL\",\"NIVEL_ESCOLARIDAD\",\"PARO_ESTUDIOS\",\"ORIENT_SEXUAL\",\"DISC_MOTRIZ\",\"COLOR_PIEL\",\"CARCEL_LECTURA\",\"CARCEL_EJERCICIO\",\"CELDA_ALIMENTOS\",\"CELDA_SERVICIO_MEDICO\",\"CELDA_DUCHA\",\"DECLARACION_CULPABLE\",\"CATEGORIAS_TIEMPO_RECLUIDO\",\"CATEGORIAS_TIEMPO_PROCESO\",\"CAR_PERSONAS_CELDA\")\n\n\n#DatosCuantitativos<-Tabla1[,varCuantitativas]\nDatosCualitativos<-Tabla1[,varCualitativas]\n#correlaciones<-cor(DatosCuantitativos)\n```\n\n```{r}\n#| label: Tabla-disyuntiva-completa1\n#| echo: false\n#| warning: false\n#| output: false\nDatosCualitativos <- data.frame(lapply(DatosCualitativos, as.factor))\n\nZ <- acm.disjonctif(DatosCualitativos) # función de ade4\n```\n\n```{r}\n#| label: Tabla-disyuntiva-completa-visualizacion\n#| echo: false\n#| warning: false\n#| output: true\n\nZ |> head(n=5) |>\n  datatable(\n    options = list(dom = 'ftp', paging = TRUE)\n    )\n```\n\n\n```{r}\n#| label: funcion-interactive\n#| echo: false\n#| warning: false\n#| output: false\n#Z <- as.matrix(Z)\n#(B <- t(Z) %*% Z)\n\n\nfviz_mca_var_interactive <- function(acm, axes = c(1, 2), repel = TRUE, ggtheme = theme_minimal(),\n                                     col.var = \"blue\", gradient.cols = NULL) {\n  \n  # Calcula la varianza explicada para los ejes seleccionados\n  eigenvalues <- acm$eig\n  var_explained_x <- round(eigenvalues[axes[1], 2], 2)\n  var_explained_y <- round(eigenvalues[axes[2], 2], 2)\n  \n  # Extrae las coordenadas y nombres de las variables (categorías)\n  var_data <- acm$var$coord\n  var_data_df <- data.frame(var_data)\n  var_data_df$Variable <- rownames(var_data_df)\n  \n  # Añade la columna correspondiente al color si se usa col.var como en la función original\n if (col.var == \"cos2\") {\n    var_data_df$Color <- get_mca_var(acm)$cos2[, axes[1]]\n    \n    p <- ggplot(var_data_df, aes(x = !!sym(colnames(var_data_df)[axes[1]]), \n                                 y = !!sym(colnames(var_data_df)[axes[2]]), \n                                 text = Variable, color = Color)) +\n      geom_point(size = 0.75, shape = 25, fill = \"red\") +  # Aquí removemos 'color = \"red\"'\n      theme_minimal() +\n      scale_color_gradientn(colors = gradient.cols) +  # Aplica el gradiente de colores\n      labs(x = paste0(\"Dim \", axes[1], \" (\", var_explained_x, \"%)\"),\n           y = paste0(\"Dim \", axes[2], \" (\", var_explained_y, \"%)\"))\n} else {\n    # Usa un color fijo si no se especifica un gradiente\n    p <- ggplot(var_data_df, aes(x = !!sym(colnames(var_data_df)[axes[1]]), \n                                 y = !!sym(colnames(var_data_df)[axes[2]]), \n                                 text = Variable)) +\n      geom_point(size = 0.75, shape = 25, color = \"red\", fill = \"red\") +\n      theme_minimal() +\n      labs(x = paste0(\"Dim \", axes[1], \" (\", var_explained_x, \"%)\"),\n           y = paste0(\"Dim \", axes[2], \" (\", var_explained_y, \"%)\"))\n  }\n  \n  # Agrega las líneas punteadas centradas en el plano cartesiano\n  p <- p + \n    geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") + \n    geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray\")\n  \n  # Conviértelo en un gráfico interactivo con plotly\n  plotly_obj <- ggplotly(p, tooltip = \"text\")\n  \n  # Retorna el gráfico interactivo\n  return(plotly_obj)\n}\n\n\n```\n\n```{r}\n#| label: MCA1\n#| echo: true\n#| output: false\nacm <- MCA(DatosCualitativos, graph=FALSE)\n\nacm_ventil<-MCA(DatosCualitativos,graph = FALSE,level.ventil = 0.01)\n```\n\ngh\n\n\n### Proyección de los individuos en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm, axes=c(1,3), geom=\"point\", asp=1, col.ind = \"cos2\",ggtheme=theme_minimal())\n\n\n```\n#### Ejes 2-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm, axes=c(2,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm, axes=c(1,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n\n:::\n### Proyección de las variables en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm, axes=c(1,2), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n\n\n```\n\n\n#### Ejes 2-3\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm, axes=c(2,3), repel = TRUE, col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm, axes=c(1,3), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n```\n\n:::\n\n### Análisis de los ejes\n::: panel-tabset\n#### Valores propios\n```{r}\n#| label: screeplot1\n#| echo: false\n#| output: true\nscreeplot <- fviz_screeplot(acm, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualitativos)\nl <- acm$eig[acm$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n#### Contribución 1er eje\n```{r}\n#| label: contribacm1\n#| echo: false\n#| output: true\ncontrib <- fviz_contrib(acm, choice = \"var\", axes = 1) +\n  theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))\ncontrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))\n# Convierte el gráfico de ggplot a plotly\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 2do eje\n```{r}\n#| label: contribacm2\n#| echo: false\n#| output: true\ncontrib<-fviz_contrib(acm, choice = \"var\", axes = 2)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 3er eje\n```{r}\n#| label: contribacm3\n#| echo: false\n#| output: true\n\ncontrib<-fviz_contrib(acm, choice = \"var\", axes = 3)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n\n:::\n\n### Contribución de cada variable\n\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| label: contribucion-correlacion\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 2\"), label = rownames(acm$var$eta2), text = rownames(acm$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 2\")  # Añadir títulos y\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 2-3\n```{r}\n#| label: contribucion-correlacion2\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm$var$eta2, aes(x = !!sym(\"Dim 2\"), y = !!sym(\"Dim 3\"), label = rownames(acm$var$eta2), text = rownames(acm$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA - Correlación de variables\", \n       x = \"Dim 2\", y = \"Dim 3\")  # Añadir títulos y etiquetas\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 1-3\n```{r}\n#| label: contribucion-correlacion3\n#| echo: false\n#| warning: false\n#| output: true\ngg <- ggplot(data = acm$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 3\"), label = rownames(acm$var$eta2), text = rownames(acm$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 3\")  # Añadir títulos y\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n:::\n\n# ACM con categorías ventiladas \n### Proyección de los individuos en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm_ventil, axes=c(1,3), geom=\"point\", asp=1, col.ind = \"cos2\",ggtheme=theme_minimal())\n\n\n```\n#### Ejes 2-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm_ventil, axes=c(2,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm_ventil, axes=c(1,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n\n:::\n### Proyección de las variables en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm_ventil, axes=c(1,2), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n\n\n```\n\n\n#### Ejes 2-3\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm_ventil, axes=c(2,3), repel = TRUE, col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm_ventil, axes=c(1,3), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n```\n\n:::\n\n### Análisis de los ejes\n::: panel-tabset\n#### Valores propios\n```{r}\n#| label: screeplot1_ventil\n#| echo: false\n#| output: true\nscreeplot <- fviz_screeplot(acm_ventil, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualitativos)\nl <- acm_ventil$eig[acm_ventil$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n#### Contribución 1er eje\n```{r}\n#| label: contribacm1_ventil\n#| echo: false\n#| output: true\ncontrib <- fviz_contrib(acm_ventil, choice = \"var\", axes = 1) +\n  theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))\ncontrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))\n# Convierte el gráfico de ggplot a plotly\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 2do eje\n```{r}\n#| label: contribacm2_ventil\n#| echo: false\n#| output: true\ncontrib<-fviz_contrib(acm_ventil, choice = \"var\", axes = 2)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 3er eje\n```{r}\n#| label: contribacm3-ventil\n#| echo: false\n#| output: true\n\ncontrib<-fviz_contrib(acm_ventil, choice = \"var\", axes = 3)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n\n:::\n\n### Contribución de cada variable\n\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| label: contribucion-correlacion-ventil\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 2\"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA Ventil - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 2\")  # Añadir títulos y\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 2-3\n```{r}\n#| label: contribucion-correlacion2-ventil\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym(\"Dim 2\"), y = !!sym(\"Dim 3\"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA Ventil - Correlación de variables\", \n       x = \"Dim 2\", y = \"Dim 3\")  # Añadir títulos y etiquetas\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 1-3\n```{r}\n#| label: contribucion-correlacion3_ventil\n#| echo: false\n#| warning: false\n#| output: true\ngg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 3\"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA Ventil - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 3\")  # Añadir títulos y\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n:::\n# ACM Por categorías\n\n## ACM de Variables Sociodemográficas\n```{r}\n#| label: ACM Sociodemográficas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_sociodemo<-c(\n\"CATEGORIAS_EDAD_CONSUMO_TABACO\",\n\"CATEGORIAS_EDAD_CONSUMO_ALCOHOL\",\n\"CATEGORIAS_EDAD_CONSUMO_MARIHUANA\" ,\n#\"CATEGORIAS_EDAD_CONSUMO_INHALABLES\",\n#\"CATEGORIAS_EDAD_CONSUMO_LSD\",\n#\"CATEGORIAS_EDAD_CONSUMO_HONGOS\",\n#\"CATEGORIAS_EDAD_CONSUMO_COCAINA\",\n#\"CATEGORIAS_EDAD_CONSUMO_CRACK\",\n#\"CATEGORIAS_EDAD_CONSUMO_HEROINA\",\n#\"CATEGORIAS_EDAD_CONSUMO_CHOCHOS\",\n#\"CATEGORIAS_EDAD_CONSUMO_TRANQUILIZANTES\",\n#\"CATEGORIAS_EDAD_CONSUMO_ANFETAMINAS\",\n#\"COLOR_PIEL\",\n\"VIVIO_MADRE_ADOLESCENCIA\", \n\"VIVIO_PADRE_ADOLESCENCIA\",\n\"SEXO\",\n#\"NACION\",\n\"EST_CIVIL\", \n\"HIJOS\",\n#\"NIVEL_ESCOLARIDAD\",\n\"PARO_ESTUDIOS\",\n#\"IDENTI_GENERO\", \n\"ORIENT_SEXUAL\",\n\"CONSIDERO_SUICIDIO\" #,\n#\"DISC_VISUAL\",\n#\"DISC_AUDITIVA\",\n#\"DISC_MOTRIZ\"\n)\n\nDatosCualiSoc<-Tabla1[,Var_cuali_sociodemo]\nacmSoc <- MCA(DatosCualiSoc, graph=FALSE,level.ventil = 0.01)\n```\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmSoc,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n             axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal())\n\n#fviz_mca_var(acmSoc,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), axes=c(4,5), repel = TRUE,label=\"none\",  ggtheme=theme_minimal())\n\n\n```\n\n\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmSoc, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualiSoc)\nl <- acmSoc$eig[acmSoc$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n\n\n\n## ACM de Variables economicas\n```{r}\n#| label: ACM Economicas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_eco<-c(\"VIVE_CON\",\n                 \"TRABAJO\",\n                 \"PODIA_COMER\",\n                 \"DEUDA\",\n                 \"SALARIO_MES_ANTERIOR\")\n\nDatosCualieco<-Tabla1[,Var_cuali_eco]\nacmEco <- MCA(DatosCualieco, graph=FALSE,level.ventil = 0.01)\n```\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmEco, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n```\n\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmEco, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualieco)\nl <- acmEco$eig[acmEco$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n## ACM de Variables delictivas\n```{r}\n#| label: ACM Delictivas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_deli<-c(\n  \"SENTENCIADO_ANTES\",\n  \"MOTIVO_DETENCION\" ,\n  \"TIEMPO_DEL_DET\",\n \"INTENTO_SOBORNO\",\n \"DECLARACION_CULPABLE\",\n \"INTENTO_SOBORNO_JUICIO\"\n)\n\nDatosCualiDeli<-Tabla1[,Var_cuali_deli]\nacmDeli <- MCA(DatosCualiDeli, graph=FALSE,level.ventil = 0.01)\n```\n\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmDeli, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n```\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmDeli, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualiDeli)\nl <- acmDeli$eig[acmDeli$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n## ACM de Vida Intracarcelaria\n```{r}\n#| label: ACM Intra carcelaria\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_intra<-c(\n \"CAR_PERSONAS_CELDA\",\n \"CELDA_VENTANAS\",\n \"CELDA_AGUA_POTABLE\" ,\n \"CELDA_DRENAJE\",\n \"CELDA_LUZ\",\n \"CELDA_DUCHA\" ,\n \"CELDA_SANITARIO\" ,\n \"CELDA_SERVICIO_MEDICO\",\n \"CELDA_ALIMENTOS\",\n \"CARCEL_EJERCICIO\",\n \"CARCEL_LECTURA\" ,\n \"CARCEL_RELIGION\" ,\n \"CARCEL_LLAMADAS\" ,\n \"CARCEL_ESTUDIO\" ,\n \"CARCEL_VISITA\" ,\n \"CELDA_SEGURIDAD\" ,\n \"CARCEL_SEGURIDAD\",\n \"TIPO_CARCEL\",\n \"TIEMPO_CARCEL\" \n)\n\nDatosCualiIntra<-Tabla1[,Var_cuali_intra]\nacmIntra <- MCA(DatosCualiIntra, graph=FALSE,level.ventil = 0.01)\n```\n\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmIntra, axes=c(3,4), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n```\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmIntra, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualiIntra)\nl <- acmIntra$eig[acmIntra$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n## ACM de Expectativas de Salida\n```{r}\n#| label: ACM Expectativas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_sali<-c(\n\"SALIDA_VIVIENDA\",\n \"SALIDA_EMPLEO\",\n \"SALIDA_ESTUDIO\",\n \"SALIDA_AMIGOS\",\n \"SALIDA_FAMILIA\",\n \"SALIDA_REINCORPORACION\",\n \"CONSIDERO_SUICIDIO\" \n)\n\nDatosCualisali<-Tabla1[,Var_cuali_sali]\nacmSali <- MCA(DatosCualisali, graph=FALSE,level.ventil = 0.02)\n```\n\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\n#fviz_mca_var_interactive(acmSali, axes=c(2,4), repel = TRUE,  ggtheme=theme_minimal())\n\nfviz_mca_var_interactive(acmSali, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n```\n\n\n\n```{r}\n#| echo: false\n\n\nscreeplot <- fviz_screeplot(acmSali, addlabels = TRUE, ylim = c(0, 30)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualisali)\nl <- acmSali$eig[acmSali$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```","srcMarkdownNoYaml":"\n\n```{r}\n#| label: carga-librerias\n#| message: false\n#| echo: false\n#| output: false\n\n#Manejo de datos\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(readxl)\n#Gráficos\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(plotly)\nlibrary(GGally)\n#ACP\nlibrary(ade4)\nlibrary(FactoClass)\nlibrary(FactoMineR)\nlibrary(factoextra)\n#Datos importados\nsource(\"DatosSeleccionados.R\")\n\n#Ajustes de tema del documento y graficos\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(RColorBrewer)\ntheme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\nlibrary(hrbrthemes)\noptions(scipen=999)\n```\n\nConvertimos alguas variables en categóricas mediante discretización\n```{r}\n#| label: Seleccion-variables\n#| echo: false\n#| warning: false\n#| output: false\n#http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/112-pca-principal-component-analysis-essentials/#r-packages\n#Escogemos las variables cuantitativas\nvarCualitativas<-c(\"TIPO_CARCEL\",\"EST_CIVIL\",\"NIVEL_ESCOLARIDAD\",\"PARO_ESTUDIOS\",\"ORIENT_SEXUAL\",\"DISC_MOTRIZ\",\"COLOR_PIEL\",\"CARCEL_LECTURA\",\"CARCEL_EJERCICIO\",\"CELDA_ALIMENTOS\",\"CELDA_SERVICIO_MEDICO\",\"CELDA_DUCHA\",\"DECLARACION_CULPABLE\",\"CATEGORIAS_TIEMPO_RECLUIDO\",\"CATEGORIAS_TIEMPO_PROCESO\",\"CAR_PERSONAS_CELDA\")\n\n\n#DatosCuantitativos<-Tabla1[,varCuantitativas]\nDatosCualitativos<-Tabla1[,varCualitativas]\n#correlaciones<-cor(DatosCuantitativos)\n```\n\n# ACM de nuestro objetivo\n```{r}\n#| label: Tabla-disyuntiva-completa1\n#| echo: false\n#| warning: false\n#| output: false\nDatosCualitativos <- data.frame(lapply(DatosCualitativos, as.factor))\n\nZ <- acm.disjonctif(DatosCualitativos) # función de ade4\n```\n\n```{r}\n#| label: Tabla-disyuntiva-completa-visualizacion\n#| echo: false\n#| warning: false\n#| output: true\n\nZ |> head(n=5) |>\n  datatable(\n    options = list(dom = 'ftp', paging = TRUE)\n    )\n```\n\n\n```{r}\n#| label: funcion-interactive\n#| echo: false\n#| warning: false\n#| output: false\n#Z <- as.matrix(Z)\n#(B <- t(Z) %*% Z)\n\n\nfviz_mca_var_interactive <- function(acm, axes = c(1, 2), repel = TRUE, ggtheme = theme_minimal(),\n                                     col.var = \"blue\", gradient.cols = NULL) {\n  \n  # Calcula la varianza explicada para los ejes seleccionados\n  eigenvalues <- acm$eig\n  var_explained_x <- round(eigenvalues[axes[1], 2], 2)\n  var_explained_y <- round(eigenvalues[axes[2], 2], 2)\n  \n  # Extrae las coordenadas y nombres de las variables (categorías)\n  var_data <- acm$var$coord\n  var_data_df <- data.frame(var_data)\n  var_data_df$Variable <- rownames(var_data_df)\n  \n  # Añade la columna correspondiente al color si se usa col.var como en la función original\n if (col.var == \"cos2\") {\n    var_data_df$Color <- get_mca_var(acm)$cos2[, axes[1]]\n    \n    p <- ggplot(var_data_df, aes(x = !!sym(colnames(var_data_df)[axes[1]]), \n                                 y = !!sym(colnames(var_data_df)[axes[2]]), \n                                 text = Variable, color = Color)) +\n      geom_point(size = 0.75, shape = 25, fill = \"red\") +  # Aquí removemos 'color = \"red\"'\n      theme_minimal() +\n      scale_color_gradientn(colors = gradient.cols) +  # Aplica el gradiente de colores\n      labs(x = paste0(\"Dim \", axes[1], \" (\", var_explained_x, \"%)\"),\n           y = paste0(\"Dim \", axes[2], \" (\", var_explained_y, \"%)\"))\n} else {\n    # Usa un color fijo si no se especifica un gradiente\n    p <- ggplot(var_data_df, aes(x = !!sym(colnames(var_data_df)[axes[1]]), \n                                 y = !!sym(colnames(var_data_df)[axes[2]]), \n                                 text = Variable)) +\n      geom_point(size = 0.75, shape = 25, color = \"red\", fill = \"red\") +\n      theme_minimal() +\n      labs(x = paste0(\"Dim \", axes[1], \" (\", var_explained_x, \"%)\"),\n           y = paste0(\"Dim \", axes[2], \" (\", var_explained_y, \"%)\"))\n  }\n  \n  # Agrega las líneas punteadas centradas en el plano cartesiano\n  p <- p + \n    geom_hline(yintercept = 0, linetype = \"dashed\", color = \"gray\") + \n    geom_vline(xintercept = 0, linetype = \"dashed\", color = \"gray\")\n  \n  # Conviértelo en un gráfico interactivo con plotly\n  plotly_obj <- ggplotly(p, tooltip = \"text\")\n  \n  # Retorna el gráfico interactivo\n  return(plotly_obj)\n}\n\n\n```\n\n```{r}\n#| label: MCA1\n#| echo: true\n#| output: false\nacm <- MCA(DatosCualitativos, graph=FALSE)\n\nacm_ventil<-MCA(DatosCualitativos,graph = FALSE,level.ventil = 0.01)\n```\n\ngh\n\n\n### Proyección de los individuos en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm, axes=c(1,3), geom=\"point\", asp=1, col.ind = \"cos2\",ggtheme=theme_minimal())\n\n\n```\n#### Ejes 2-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm, axes=c(2,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm, axes=c(1,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n\n:::\n### Proyección de las variables en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm, axes=c(1,2), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n\n\n```\n\n\n#### Ejes 2-3\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm, axes=c(2,3), repel = TRUE, col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm, axes=c(1,3), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n```\n\n:::\n\n### Análisis de los ejes\n::: panel-tabset\n#### Valores propios\n```{r}\n#| label: screeplot1\n#| echo: false\n#| output: true\nscreeplot <- fviz_screeplot(acm, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualitativos)\nl <- acm$eig[acm$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n#### Contribución 1er eje\n```{r}\n#| label: contribacm1\n#| echo: false\n#| output: true\ncontrib <- fviz_contrib(acm, choice = \"var\", axes = 1) +\n  theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))\ncontrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))\n# Convierte el gráfico de ggplot a plotly\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 2do eje\n```{r}\n#| label: contribacm2\n#| echo: false\n#| output: true\ncontrib<-fviz_contrib(acm, choice = \"var\", axes = 2)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 3er eje\n```{r}\n#| label: contribacm3\n#| echo: false\n#| output: true\n\ncontrib<-fviz_contrib(acm, choice = \"var\", axes = 3)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n\n:::\n\n### Contribución de cada variable\n\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| label: contribucion-correlacion\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 2\"), label = rownames(acm$var$eta2), text = rownames(acm$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 2\")  # Añadir títulos y\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 2-3\n```{r}\n#| label: contribucion-correlacion2\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm$var$eta2, aes(x = !!sym(\"Dim 2\"), y = !!sym(\"Dim 3\"), label = rownames(acm$var$eta2), text = rownames(acm$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA - Correlación de variables\", \n       x = \"Dim 2\", y = \"Dim 3\")  # Añadir títulos y etiquetas\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 1-3\n```{r}\n#| label: contribucion-correlacion3\n#| echo: false\n#| warning: false\n#| output: true\ngg <- ggplot(data = acm$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 3\"), label = rownames(acm$var$eta2), text = rownames(acm$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 3\")  # Añadir títulos y\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n:::\n\n# ACM con categorías ventiladas \n### Proyección de los individuos en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm_ventil, axes=c(1,3), geom=\"point\", asp=1, col.ind = \"cos2\",ggtheme=theme_minimal())\n\n\n```\n#### Ejes 2-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm_ventil, axes=c(2,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_ind(acm_ventil, axes=c(1,3), geom=\"point\", col.ind = \"cos2\",ggtheme=theme_minimal())\n```\n\n\n:::\n### Proyección de las variables en los planos factoriales\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm_ventil, axes=c(1,2), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n\n\n```\n\n\n#### Ejes 2-3\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm_ventil, axes=c(2,3), repel = TRUE, col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),ggtheme=theme_minimal())\n```\n\n#### Ejes 1-3\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acm_ventil, axes=c(1,3), repel = TRUE,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), ggtheme=theme_minimal())\n```\n\n:::\n\n### Análisis de los ejes\n::: panel-tabset\n#### Valores propios\n```{r}\n#| label: screeplot1_ventil\n#| echo: false\n#| output: true\nscreeplot <- fviz_screeplot(acm_ventil, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualitativos)\nl <- acm_ventil$eig[acm_ventil$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n#### Contribución 1er eje\n```{r}\n#| label: contribacm1_ventil\n#| echo: false\n#| output: true\ncontrib <- fviz_contrib(acm_ventil, choice = \"var\", axes = 1) +\n  theme(axis.text.x = element_text(size = 6, angle = 90, hjust = 1))\ncontrib<-contrib+theme(axis.text.x = element_text(size =4, angle = 90, hjust = 1))\n# Convierte el gráfico de ggplot a plotly\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 2do eje\n```{r}\n#| label: contribacm2_ventil\n#| echo: false\n#| output: true\ncontrib<-fviz_contrib(acm_ventil, choice = \"var\", axes = 2)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n#### Contribución 3er eje\n```{r}\n#| label: contribacm3-ventil\n#| echo: false\n#| output: true\n\ncontrib<-fviz_contrib(acm_ventil, choice = \"var\", axes = 3)\ncontrib<-contrib+theme(axis.text.x = element_text(size =3.5, angle = 90, hjust = 1))\n\ncontrib_plotly <- ggplotly(contrib)\n\ncontrib_plotly\n```\n\n:::\n\n### Contribución de cada variable\n\n::: panel-tabset\n#### Ejes 1-2\n```{r}\n#| label: contribucion-correlacion-ventil\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 2\"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA Ventil - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 2\")  # Añadir títulos y\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 2-3\n```{r}\n#| label: contribucion-correlacion2-ventil\n#| echo: false\n#| warning: false\n#| output: true\n\n# Crear el gráfico ggplot\ngg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym(\"Dim 2\"), y = !!sym(\"Dim 3\"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA Ventil - Correlación de variables\", \n       x = \"Dim 2\", y = \"Dim 3\")  # Añadir títulos y etiquetas\n\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n\n#### Ejes 1-3\n```{r}\n#| label: contribucion-correlacion3_ventil\n#| echo: false\n#| warning: false\n#| output: true\ngg <- ggplot(data = acm_ventil$var$eta2, aes(x = !!sym(\"Dim 1\"), y = !!sym(\"Dim 3\"), label = rownames(acm_ventil$var$eta2), text = rownames(acm_ventil$var$eta2))) +\n  geom_point(size=0.75,shape=75,colour=\"blue3\") +  # Añadir los puntos\n  geom_text_repel(aes(label = rownames(acm_ventil$var$eta2)), size = 3) +  # Añadir las etiquetas\n  theme_minimal() +  # Aplicar un tema minimalista\n  labs(title = \"MCA Ventil - Correlación de variables\", \n       x = \"Dim 1\", y = \"Dim 3\")  # Añadir títulos y\n# Convertir el gráfico ggplot a plotly y mostrar el nombre de la variable al pasar el mouse\nggplotly(gg, tooltip = \"text\")\n\n```\n:::\n# ACM Por categorías\n\n## ACM de Variables Sociodemográficas\n```{r}\n#| label: ACM Sociodemográficas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_sociodemo<-c(\n\"CATEGORIAS_EDAD_CONSUMO_TABACO\",\n\"CATEGORIAS_EDAD_CONSUMO_ALCOHOL\",\n\"CATEGORIAS_EDAD_CONSUMO_MARIHUANA\" ,\n#\"CATEGORIAS_EDAD_CONSUMO_INHALABLES\",\n#\"CATEGORIAS_EDAD_CONSUMO_LSD\",\n#\"CATEGORIAS_EDAD_CONSUMO_HONGOS\",\n#\"CATEGORIAS_EDAD_CONSUMO_COCAINA\",\n#\"CATEGORIAS_EDAD_CONSUMO_CRACK\",\n#\"CATEGORIAS_EDAD_CONSUMO_HEROINA\",\n#\"CATEGORIAS_EDAD_CONSUMO_CHOCHOS\",\n#\"CATEGORIAS_EDAD_CONSUMO_TRANQUILIZANTES\",\n#\"CATEGORIAS_EDAD_CONSUMO_ANFETAMINAS\",\n#\"COLOR_PIEL\",\n\"VIVIO_MADRE_ADOLESCENCIA\", \n\"VIVIO_PADRE_ADOLESCENCIA\",\n\"SEXO\",\n#\"NACION\",\n\"EST_CIVIL\", \n\"HIJOS\",\n#\"NIVEL_ESCOLARIDAD\",\n\"PARO_ESTUDIOS\",\n#\"IDENTI_GENERO\", \n\"ORIENT_SEXUAL\",\n\"CONSIDERO_SUICIDIO\" #,\n#\"DISC_VISUAL\",\n#\"DISC_AUDITIVA\",\n#\"DISC_MOTRIZ\"\n)\n\nDatosCualiSoc<-Tabla1[,Var_cuali_sociodemo]\nacmSoc <- MCA(DatosCualiSoc, graph=FALSE,level.ventil = 0.01)\n```\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmSoc,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n             axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal())\n\n#fviz_mca_var(acmSoc,col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), axes=c(4,5), repel = TRUE,label=\"none\",  ggtheme=theme_minimal())\n\n\n```\n\n\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmSoc, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualiSoc)\nl <- acmSoc$eig[acmSoc$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n\n\n\n## ACM de Variables economicas\n```{r}\n#| label: ACM Economicas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_eco<-c(\"VIVE_CON\",\n                 \"TRABAJO\",\n                 \"PODIA_COMER\",\n                 \"DEUDA\",\n                 \"SALARIO_MES_ANTERIOR\")\n\nDatosCualieco<-Tabla1[,Var_cuali_eco]\nacmEco <- MCA(DatosCualieco, graph=FALSE,level.ventil = 0.01)\n```\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmEco, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n```\n\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmEco, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualieco)\nl <- acmEco$eig[acmEco$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n## ACM de Variables delictivas\n```{r}\n#| label: ACM Delictivas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_deli<-c(\n  \"SENTENCIADO_ANTES\",\n  \"MOTIVO_DETENCION\" ,\n  \"TIEMPO_DEL_DET\",\n \"INTENTO_SOBORNO\",\n \"DECLARACION_CULPABLE\",\n \"INTENTO_SOBORNO_JUICIO\"\n)\n\nDatosCualiDeli<-Tabla1[,Var_cuali_deli]\nacmDeli <- MCA(DatosCualiDeli, graph=FALSE,level.ventil = 0.01)\n```\n\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmDeli, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n```\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmDeli, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualiDeli)\nl <- acmDeli$eig[acmDeli$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n## ACM de Vida Intracarcelaria\n```{r}\n#| label: ACM Intra carcelaria\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_intra<-c(\n \"CAR_PERSONAS_CELDA\",\n \"CELDA_VENTANAS\",\n \"CELDA_AGUA_POTABLE\" ,\n \"CELDA_DRENAJE\",\n \"CELDA_LUZ\",\n \"CELDA_DUCHA\" ,\n \"CELDA_SANITARIO\" ,\n \"CELDA_SERVICIO_MEDICO\",\n \"CELDA_ALIMENTOS\",\n \"CARCEL_EJERCICIO\",\n \"CARCEL_LECTURA\" ,\n \"CARCEL_RELIGION\" ,\n \"CARCEL_LLAMADAS\" ,\n \"CARCEL_ESTUDIO\" ,\n \"CARCEL_VISITA\" ,\n \"CELDA_SEGURIDAD\" ,\n \"CARCEL_SEGURIDAD\",\n \"TIPO_CARCEL\",\n \"TIEMPO_CARCEL\" \n)\n\nDatosCualiIntra<-Tabla1[,Var_cuali_intra]\nacmIntra <- MCA(DatosCualiIntra, graph=FALSE,level.ventil = 0.01)\n```\n\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\nfviz_mca_var_interactive(acmIntra, axes=c(3,4), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n```\n\n```{r}\n#| echo: false\nscreeplot <- fviz_screeplot(acmIntra, addlabels = TRUE, ylim = c(0, 20)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualiIntra)\nl <- acmIntra$eig[acmIntra$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```\n\n## ACM de Expectativas de Salida\n```{r}\n#| label: ACM Expectativas\n#| message: false\n#| echo: false\n#| output: false\n\n\nVar_cuali_sali<-c(\n\"SALIDA_VIVIENDA\",\n \"SALIDA_EMPLEO\",\n \"SALIDA_ESTUDIO\",\n \"SALIDA_AMIGOS\",\n \"SALIDA_FAMILIA\",\n \"SALIDA_REINCORPORACION\",\n \"CONSIDERO_SUICIDIO\" \n)\n\nDatosCualisali<-Tabla1[,Var_cuali_sali]\nacmSali <- MCA(DatosCualisali, graph=FALSE,level.ventil = 0.02)\n```\n\n\n\n```{r}\n#| fig-cap: ''\n#| fig-align: 'center'\n#| fig-width: 5.5\n#| fig-height: 5\n#| echo: false\n#fviz_mca_var_interactive(acmSali, axes=c(2,4), repel = TRUE,  ggtheme=theme_minimal())\n\nfviz_mca_var_interactive(acmSali, axes=c(1,2), repel = TRUE,  ggtheme=theme_minimal(),col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n```\n\n\n\n```{r}\n#| echo: false\n\n\nscreeplot <- fviz_screeplot(acmSali, addlabels = TRUE, ylim = c(0, 30)) +  ggtitle(\"Scree Plot\") + theme_minimal()+ylab(\"Porcentaje de varianza explicada\")+xlab(\"Ejes\")\n\n## Usando modif.rate() del paquete GDAtools:\n# ptau <- modif.rate(acm)$modif[, 1]\n## Haciendo las cuentas uno mismo:\ns <- ncol(DatosCualisali)\nl <- acmSali$eig[acmSali$eig[,1] > 1/s, 1]\ntau <- ( s / (s - 1) )^2 * ( l - (1/s) )^2\nptau <- tau / sum( tau ) * 100\n\n# Creamos un data frame para usar con ggplot2\nbarplot_df <- data.frame(Indice = factor(1:length(ptau)), Valor = ptau)\n\n# Creamos el gráfico de barras con ggplot2\nbarplot_gg <- ggplot(barplot_df, aes(x = Indice, y = Valor)) +\n  geom_bar(stat = \"identity\", fill = \"darkred\") +\n  ylim(0, max(barplot_df$Valor+10)) +\n  labs(x = \"Ejes\", y = expression(tau(lambda))) +\n  theme_minimal() +\n  ggtitle(\"Criterio de Benzécri\")\n\ngrid.arrange(screeplot, barplot_gg, ncol = 1)\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"ACS.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","other-links-title":"Otros Enlaces","code-links-title":"Enlaces de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Cuaderno de Artículo","notebook-preview-download":"Descargar Cuaderno","notebook-preview-download-src":"Descargar código fuente","notebook-preview-back":"Volver al Artículo","manuscript-meca-bundle":"Archivo MECA","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","title-block-keywords":"Palabras clave","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","tools-share":"Compartir","tools-download":"Descargar","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-wordcount":"Conteo de Palabras","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados","listing-page-words":"{0} palabras"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.4.549","editor":"visual","theme":{"light":"simplex","dark":"slate"},"toc-expand":2,"toc-title":"Tabla de contenidos","toc-location":"right","title":"Análisis de Correspondencias Simples"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}